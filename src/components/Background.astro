<div class="h-0">
  <canvas id="canvas" class="h-screen w-screen" style="filter: url('#liquid')" />
  <svg xmlns="http://www.w3.org/2000/svg" version="1.1">
    <defs>
      <filter id="liquid">
        <feGaussianBlur in="SourceGraphic" stdDeviation="10" result="blur" />
        <feColorMatrix in="blur" mode="matrix" values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 40 -10"/>
      </filter>
    </defs>
  </svg>
</div>

<script is:inline>
const canvas = document.getElementById("canvas"),
context = canvas.getContext("2d"),
colorPallete = ["#9654f7", "#00f", "#00a", "#00b", "#00c", "#00d", "#00e"];

var width = canvas.width = window.innerWidth,
  height = canvas.height = window.innerHeight,
  src = {
    x: width / 2,
    y: height / 2
  },
  circles = [];

window.onresize = function() {
  width = canvas.width = window.innerWidth;
  height = canvas.height = window.innerHeight;
  src.x= width / 2;
  src.y= height / 2;
}

class Circle {
  constructor() {
    this.x = src.x;
    this.y = src.y;
    this.angle = Math.PI * 2 * Math.random();
    var speed=1 + Math.random();
    this.vx = speed* Math.cos(this.angle);
    this.vy = speed* Math.sin(this.angle);
    this.r = 6 + 10 * Math.random()

    this.color = colorPallete[Math.floor(Math.random() * colorPallete.length)];
  }

  update() {
    this.x += this.vx;
    this.y += this.vy;
    this.r -= .01;

  }
}

function removeCircles() {
 circles = circles.filter(
    (b) =>
      !(
        b.x + b.r < 0 ||
        b.x - b.r > width ||
        b.y + b.r < 0 ||
        b.y - b.r > height ||
        b.r < 0
      )
  );
}

function renderCircles() {
  context.clearRect(0, 0, width, height);

  if (Math.random() > .2)
    circles.push(new Circle());

  for (var i = 0; i < circles.length; i++) {
    var b = circles[i];
    context.fillStyle = b.color;
    context.beginPath();

    context.arc(b.x, b.y, b.r, 0, Math.PI * 2, false);

    context.fill();
    b.update();
  }

  removeCircles();
  requestAnimationFrame(renderCircles);
}

setTimeout(5000, renderCircles());
</script>